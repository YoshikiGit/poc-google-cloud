steps:
  # „Çπ„ÉÜ„ÉÉ„Éó1: „Çµ„Éº„Éì„ÇπÂ≠òÂú®„ÉÅ„Çß„ÉÉ„ÇØ
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "=== „Çµ„Éº„Éì„ÇπÂ≠òÂú®„ÉÅ„Çß„ÉÉ„ÇØ ==="
        
        # Cloud Run„Çµ„Éº„Éì„Çπ„Å®„Åó„Å¶Â≠òÂú®„Åô„Çã„Åã„ÉÅ„Çß„ÉÉ„ÇØ
        if gcloud run services describe hello-world --region=${_REGION} 2>/dev/null; then
          _SERVICE_STATUS="existing"
          
          echo "ÁèæÂú®„ÅÆË®≠ÂÆö:"
          gcloud run services describe hello-world --region=${_REGION} \
            --format="table(status.url,status.ingress,spec.template.spec.containers[0].resources.limits.memory)"
        else
          echo "üìù Êó¢Â≠ò„Çµ„Éº„Éì„Çπ„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì"
          _SERVICE_STATUS="not existing"
        fi
        
        echo "„Çµ„Éº„Éì„ÇπÁä∂ÊÖã: ${_SERVICE_STATUS}"
        
        echo ""
        echo "=== Ë®≠ÂÆöÂÄ§ ==="
        echo "„É™„Éº„Ç∏„Éß„É≥: ${_REGION}"
        echo "„É°„É¢„É™: ${_MEMORY}"
        echo "„Çø„Ç§„É†„Ç¢„Ç¶„Éà: ${_TIMEOUT}"
        echo "ÊúÄÂ§ß„Ç§„É≥„Çπ„Çø„É≥„Çπ: ${_MAX_INSTANCES}"
        echo "Áí∞Â¢É: ${_ENVIRONMENT}"
    id: 'check-service'

  # „Çπ„ÉÜ„ÉÉ„Éó2: Êñ∞Ë¶è„Çµ„Éº„Éì„Çπ‰ΩúÊàê/ Êó¢Â≠ò„Çµ„Éº„Éì„ÇπÊõ¥Êñ∞
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |        
        if [ "${_SERVICE_STATUS}" = "existing" ]; then
          echo "=== Êó¢Â≠ò„Çµ„Éº„Éì„Çπ„ÅÆÊõ¥Êñ∞ ==="
          
          gcloud run services update hello-world \
            --region=${_REGION} \
            --no-allow-unauthenticated \
            --ingress=all \
            --memory=${_MEMORY} \
            --timeout=${_TIMEOUT} \
            --max-instances=${_MAX_INSTANCES} \
            --min-instances=${_MIN_INSTANCES} \
            --set-env-vars=ENVIRONMENT=${_ENVIRONMENT},ACCESS_TYPE=authenticated \
            --verbosity=info
          
          echo "‚úÖ Êó¢Â≠ò„Çµ„Éº„Éì„ÇπÊõ¥Êñ∞ÂÆå‰∫Ü"
        else
          gcloud functions deploy hello-world \
            --gen2 \
            --runtime=python311 \
            --region=${_REGION} \
            --source=./cloud_run_functions \
            --entry-point=hello_world \
            --trigger-http \
            --no-allow-unauthenticated \
            --ingress-settings=all \
            --memory=${_MEMORY} \
            --timeout=${_TIMEOUT} \
            --max-instances=${_MAX_INSTANCES} \
            --min-instances=${_MIN_INSTANCES} \
            --set-env-vars=ENVIRONMENT=${_ENVIRONMENT},ACCESS_TYPE=authenticated \
            --verbosity=info
          
          echo "‚úÖ Êñ∞Ë¶èÈñ¢Êï∞‰ΩúÊàêÂÆå‰∫Ü"
        fi
    id: 'create-or-update-service'
    waitFor: ['check-service']

substitutions:
  _REGION: 'asia-northeast1'
  _MEMORY: '256Mi'
  _TIMEOUT: '60s'
  _MAX_INSTANCES: '5'
  _MIN_INSTANCES: '0'
  _ENVIRONMENT: 'development'
  _SERVICE_STATUS: ''

options:
  machineType: 'E2_HIGHCPU_8'
  logging: CLOUD_LOGGING_ONLY

timeout: '1200s'